<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
  <!--1、配置连接池信息 -->
  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <!-- 最大连接数 -->
    <property name="maxTotal" value="50"></property>
    <!-- 最大空闲数 -->
    <property name="maxIdle" value="5"></property>
  </bean>

  <!--2、Spring整合Redis -->
  <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <!-- 服务器地址 -->
    <property name="hostName" value="127.0.0.1"></property>
    <!-- 端口 -->
    <property name="port" value="6379"></property>
    <!-- 密码 -->
    <property name="password" value=""></property>

    <!-- 自定义连接池配置 -->
    <property name="poolConfig" ref="jedisPoolConfig"></property>
  </bean>

  <!--3、RedisTemplate -->
  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    <!-- Redis工厂 -->
    <property name="connectionFactory" ref="jedisConnectionFactory"></property>

    <!-- 配置Serializer -->
    <!-- key进行序列化设置，默认JDK改为String -->
    <property name="keySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    </property>

    <!-- value进行序列化设置，默认JDK改为String -->
    <property name="valueSerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    </property>

    <!-- hashkey进行序列化设置，默认JDK改为String -->
<!--    <property name="hashKeySerializer">-->
<!--      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>-->
<!--    </property>-->

    <!-- hashvalue进行序列化设置，默认JDK改为String -->
<!--    <property name="hashValueSerializer">-->
<!--      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>-->
<!--    </property>-->
  </bean>
</beans>